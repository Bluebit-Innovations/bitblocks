# Copy this file to .env and fill in the required values

#self-healing scripts configuration
WATCH_SERVICES=nginx,redis.service
CHECK_INTERVAL=60
SLACK_WEBHOOK_URL=https://hooks.slack.com/â€¦
KUBECONFIG=/path/to/kubeconfig
DRAIN_TIMEOUT_SEC=300


# Autoscaling script configuration

# AWS credentials (if not using instance roles)
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_DEFAULT_REGION=us-east-1

# GCP credentials and configuration
GOOGLE_APPLICATION_CREDENTIALS=/path/to/gcp-service-account.json
GCP_ZONE=us-central1-a

# Optional: Notification webhook for scaling events
AUTOSCALE_SLACK_WEBHOOK_URL=https://hooks.slack.com/...

# Database autoscaling configuration

# Thresholds for scaling up/down (in percent for AWS, float for GCP)
DB_AUTOSCALE_UP_CPU=70
DB_AUTOSCALE_DOWN_CPU=30

# Minimum and maximum number of read replicas
DB_AUTOSCALE_MIN_REPLICAS=1
DB_AUTOSCALE_MAX_REPLICAS=5

# Optional: Notification webhook for DB autoscaling events
DB_AUTOSCALE_SLACK_WEBHOOK_URL=https://hooks.slack.com/...



# Scheduled scaling configuration

# Name of the group to scale (ASG for AWS, MIG for GCP)
SCHEDULED_SCALE_GROUP=your_group_name

# Desired size for weekdays (Monday-Friday)
SCHEDULED_SCALE_WEEKDAY_SIZE=3

# Desired size for weekends (Saturday-Sunday)
SCHEDULED_SCALE_WEEKEND_SIZE=1


# Database backup configuration

# Type of database: 'postgres' or 'mysql'
DB_TYPE=postgres

# Database connection details
DB_HOST=localhost
DB_USER=your_db_user
DB_PASS=your_db_password
DB_NAME=your_db_name

# Directory to store backups
BACKUP_DIR=/path/to/backup/dir


# Backup verification configuration

# Email to notify on verification failure (optional)
BACKUP_VERIFY_ALERT_EMAIL=your_email@example.com

# Whether to delete corrupted backups (true/false)
BACKUP_VERIFY_DELETE_CORRUPT=false

# Log file for verification results (optional)
BACKUP_VERIFY_LOG_FILE=/path/to/backup/verify.log

# S3 sync configuration

# Name of the S3 bucket to sync backups to
S3_BUCKET=your_s3_bucket_name

# Optional: Prefix (folder) in the S3 bucket
S3_PREFIX=backups

# AWS CLI profile to use for authentication
AWS_PROFILE=default

# AWS region for the S3 bucket
AWS_REGION=us-east-1


# GitHub Actions integration
# Personal access token or GitHub App token
GITHUB_TOKEN=your_github_token

# Repository in "org/repo" format
GITHUB_REPO=your_org/your_repo

# GitHub Actions workflow file name (e.g. "deploy.yml")
WORKFLOW_FILE_NAME=deploy.yml

# SLO monitoring configuration

# URL of the SLO service
SLO_SERVICE_URL=https://your-slo-service.example.com

# API token for SLO service authentication
SLO_API_TOKEN=your_slo_api_token

# Error budget threshold (e.g. "0.2" for 20%)
ERROR_BUDGET_THRESHOLD=0.2


# Flaky test quarantine configuration

# Personal access token or GitHub App token for GitHub API access
GITHUB_TOKEN=your_github_token

# Repository in "org/repo" format
GITHUB_REPO=your_org/your_repo

# Number of recent workflow runs to check for flakiness
FLAKY_RUN_COUNT=3

# Label to apply to quarantined flaky tests
QUARANTINE_LABEL=flaky


# Pull request stale reminder configuration

# Personal access token or GitHub App token for GitHub API access
GITHUB_TOKEN=your_github_token

# Repository in "org/repo" format
GITHUB_REPO=your_org/your_repo

# Number of days after which a PR is considered stale
PR_STALE_DAYS=7

# Reminder message to post as a comment on stale PRs
REMINDER_MESSAGE=This pull request has been marked as stale due to inactivity. Please update or comment to keep it open.

# Jenkins job monitoring configuration

# URL of the Jenkins server
JENKINS_URL=https://your-jenkins.example.com

# Jenkins username
JENKINS_USER=your_jenkins_user

# Jenkins API token or password
JENKINS_TOKEN=your_jenkins_token

# Name of the Jenkins job to monitor
JOB_NAME=your_jenkins_job

# Threshold in minutes to consider a job as stuck
STUCK_THRESHOLD_MINUTES=60

# Cost-aware scheduler configuration

# Default platform: aws or gcp
SCHEDULER_PLATFORM=aws

# Default tag key and value to identify instances
SCHEDULER_TAG_KEY=Env
SCHEDULER_TAG_VAL=dev

# Default off-hours start and end (24h format)
SCHEDULER_OFF_START=20
SCHEDULER_OFF_END=6


# Health check configuration

# Comma-separated URLs to probe (e.g. https://svc1/health,https://svc2/health)
HEALTH_ENDPOINTS=https://svc1/health,https://svc2/health

# (optional) Slack Incoming Webhook for notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/...


# Dependency uptime monitoring configuration

# Comma-separated URLs of 3rd-party APIs to check
DEPENDENCY_APIS=https://api.stripe.com,https://api.sendgrid.com

# Maximum acceptable latency in milliseconds
UPTIME_THRESHOLD_MS=500

# (optional) Slack Incoming Webhook for dependency uptime alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/...


# Stripe integration configuration

# Your Stripe secret key
STRIPE_API_KEY=your_stripe_secret_key

# URL to POST a test payload
WEBHOOK_URL=https://your-webhook-endpoint.example.com

# SMTP configuration

# SMTP server address (e.g. smtp.example.com)
SMTP_SERVER=smtp.example.com

# SMTP server port (e.g. 587)
SMTP_PORT=587

# SMTP username
SMTP_USER=your_smtp_username

# SMTP password
SMTP_PASS=your_smtp_password

# Address to send a test email
TEST_EMAIL_RECIPIENT=test@example.com

# (optional) Slack Incoming Webhook for notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/...


# SSL certificate monitoring configuration

# Comma-separated hostnames (e.g. example.com,api.example.com)
SSL_DOMAINS=example.com,api.example.com

# Days before expiry to alert (default 30)
SSL_EXPIRY_THRESHOLD_DAYS=30

# (optional) Slack Incoming Webhook for notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/...


# Cloud provider audit logging configuration

# AWS region for audit logs (default: us-east-1)
AWS_REGION=us-east-1

# AWS CloudWatch Log Group for audit logs
AWS_AUDIT_LOG_GROUP=your_audit_log_group

# GCP project ID for audit logs
GCP_PROJECT=your_gcp_project_id

# GCP bucket for log sink
GCP_LOG_SINK_BUCKET=your_gcp_log_sink_bucket

# Azure Storage Account for audit logs
AZURE_STORAGE_ACCOUNT=your_azure_storage_account

# Azure Storage Account Key
AZURE_STORAGE_KEY=your_azure_storage_key

# Azure Blob container for audit logs
AZURE_AUDIT_CONTAINER=your_audit_container


# Defaults for cloud provider configuration

# AWS region (default: us-east-1)
AWS_REGION=us-east-1

# GCP project ID (default: your_gcp_project_id)
GCP_PROJECT=your_gcp_project_id

# Azure Storage Account (default: your_azure_storage_account)
AZURE_STORAGE_ACCOUNT=your_azure_storage_account

# Azure Storage Account Key (default: your_azure_storage_key)
AZURE_STORAGE_KEY=your_azure_storage_key


# Defaults for additional cloud provider configuration

# AWS region (default: us-east-1)
AWS_REGION=us-east-1

# GCP project ID (default: your_gcp_project_id)
GCP_PROJECT=your_gcp_project_id

# Azure Tenant ID (default: your_azure_tenant_id)
AZURE_TENANT_ID=your_azure_tenant_id

# Azure Client ID (default: your_azure_client_id)
AZURE_CLIENT_ID=your_azure_client_id

# Azure Client Secret (default: your_azure_client_secret)
AZURE_CLIENT_SECRET=your_azure_client_secret


# Cloud provider region and project configuration

# AWS region (default: us-east-1)
AWS_REGION=us-east-1

# GCP project ID (default: your_gcp_project_id)
GCP_PROJECT=your_gcp_project_id

# Azure Key Vault configuration

# Azure Key Vault URL
AZURE_VAULT_URL=https://your-azure-vault.vault.azure.net/

# Generic Vault configuration

# Vault URL (e.g. HashiCorp Vault)
VAULT_URL=https://your-vault.example.com

# Vault authentication token
VAULT_TOKEN=your_vault_token



# Kubernetes configuration
# K8 Node Monitoring configuration
# Path to kubeconfig (optional; in-cluster if omitted)
KUBECONFIG=/path/to/kubeconfig

# (optional) Incoming webhook for alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/...

# Seconds to wait for pod evictions (default: 300)
DRAIN_TIMEOUT_SEC=300


# Service watcher configuration

# Comma-separated systemd unit names to monitor (e.g. nginx,redis.service)
WATCH_SERVICES=nginx,redis.service

# Seconds between service checks (default: 60)
CHECK_INTERVAL=60

# (optional) Slack Incoming Webhook for service alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/...

# Daily Health Summary configuration

# (optional) Slack Incoming Webhook for daily summary
SLACK_WEBHOOK_URL=https://hooks.slack.com/...

# (optional) SMTP server for email reports
EMAIL_SMTP_SERVER=smtp.example.com

# SMTP server port (e.g. 587)
EMAIL_SMTP_PORT=587

# SMTP username
EMAIL_USER=your_smtp_username

# SMTP password
EMAIL_PASS=your_smtp_password

# Comma-separated list of email recipients
EMAIL_RECIPIENTS=recipient1@example.com,recipient2@example.com

# Comma-separated URLs returning JSON metrics ({"name","value"})
METRIC_ENDPOINTS=https://metrics1.example.com,https://metrics2.example.com




# On-call notifier configuration

# Path to the on-call rota CSV file (shift_start_iso,shift_end_iso,user_slack,user_email)
ONCALL_ROTA_FILE=/path/to/oncall_rota.csv

# (optional) Slack Incoming Webhook for on-call notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/...

# SMTP server for on-call email notifications
EMAIL_SMTP_SERVER=smtp.example.com

# SMTP server port (e.g. 587)
EMAIL_SMTP_PORT=587

# SMTP username for on-call notifications
EMAIL_USER=your_smtp_username

# SMTP password for on-call notifications
EMAIL_PASS=your_smtp_password


# Burnout detector configuration

# Path to newline-delimited JSON alert log ({"user","timestamp","severity"})
ALERT_LOG_PATH=/path/to/alert_log.json

# Path to newline-delimited JSON on-call log ({"user","start","end"})
ONCALL_LOG_PATH=/path/to/oncall_log.json

# Alerts/day threshold (default: 50)
ALERT_THRESHOLD=50

# Hours-on-call/day threshold (default: 12)
HOURS_THRESHOLD=12

# (optional) Slack Incoming Webhook for burnout alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/...



# PagerDuty integration configuration

# PagerDuty API token
PAGERDUTY_API_TOKEN=your_pagerduty_api_token

# PagerDuty service ID
PAGERDUTY_SERVICE_ID=your_pagerduty_service_id

# PagerDuty escalation policy ID (optional)
PAGERDUTY_ESCALATION_POLICY_ID=your_pagerduty_escalation_policy_id

# PagerDuty integration key (for Events API v2)
PAGERDUTY_INTEGRATION_KEY=your_pagerduty_integration_key