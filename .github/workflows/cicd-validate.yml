name: Validate GitHub and GitLab CI/CD Templates

on:
  push:
    branches:
      - main
      - ore/terraform-gh-action
    # paths:
    #   - "bit-blocks-starter/cicd-pipelines/**"
  pull_request:

jobs:
  validate-github-actions:
    name: Validate GitHub Actions (actionlint)
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
      
      - name: üé® Run actionlint with colors and annotations
        uses: reviewdog/action-actionlint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check    # Shows annotations in the "Checks" tab
          level: warning
          actionlint_flags: >-
            -color always
            $(find bit-blocks/bit-blocks-starter/cicd-pipelines/github-actions -type f -name "*.yml" -exec printf -- "-file %s\n" {} \;)


  validate-gitlab-ci:
    name: Validate GitLab CI/CD YAMLs
    runs-on: ubuntu-latest
    env:
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîé Validate GitLab YAML files using GitLab CI Lint API
        run: |
          echo "üîé Validating GitLab CI/CD templates..."
          find bit-blocks/bit-blocks-starter/cicd-pipelines/gitlab -name "*.yml" | while read -r file; do
            echo -e "\033[1;34müîç Validating:\033[0m $file"
            CONTENT=$(sed 's/"/\\"/g' "$file" | awk '{printf "%s\\n", $0}')
            PAYLOAD="{\"content\":\"$CONTENT\"}"

            RESPONSE=$(curl --fail --silent --show-error \
              --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
              --header "Content-Type: application/json" \
              --data "$PAYLOAD" \
              https://gitlab.com/api/v4/ci/lint)

            if echo "$RESPONSE" | jq -e '.status == "valid"' > /dev/null; then
              echo -e "\033[1;32m‚úÖ VALID\033[0m"
            else
              echo -e "\033[1;31m‚ùå INVALID\033[0m"
              echo "$RESPONSE" | jq
            fi
          done
