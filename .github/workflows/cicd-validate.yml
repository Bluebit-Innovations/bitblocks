name: Validate GitHub and GitLab CI/CD Templates

on:
  push:
    branches:
      - main
      - ore/terraform-gh-action
    # paths:
    #   - "bit-blocks-starter/cicd-pipelines/**"
  # pull_request:

jobs:
  validate-github-actions:
    name: Validate GitHub Actions (actionlint)
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🎨 Install actionlint
        run: |
          echo "🔽 Downloading actionlint binary..."
          uname -m
          VERSION=$(curl -s https://api.github.com/repos/rhysd/actionlint/releases/latest | jq -r '.tag_name')
          echo "⬇️ Downloading actionlint version $VERSION..."

          curl -sSL -o actionlint.tar.gz "https://github.com/rhysd/actionlint/releases/download/${VERSION}/actionlint_${VERSION#v}_linux_amd64.tar.gz"
          tar -xzf actionlint.tar.gz
          chmod +x actionlint
          sudo mv actionlint /usr/local/bin/
          actionlint --version


      - name: 🔍 Run actionlint with color
        run: |
          echo "🔍 Scanning GitHub Actions templates..."
          find bit-blocks-starter/cicd-pipelines/github-actions -type f -name "*.yml" | while read -r file; do
            echo -e "\033[1;36m🔎 Checking:\033[0m $file"
            actionlint -color "$file"
          done
  validate-gitlab-ci:
    name: Validate GitLab CI Templates
    runs-on: ubuntu-latest
    env:
      GITLAB_REPO: bluebit2/ghaction-gitlab-template-linter  # 🔁 Replace with your GitLab repo path
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Install glab CLI
        run: |
          sudo apt update
          sudo apt install -y glab
          glab --version

      - name: 🔐 Configure glab authentication
        run: |
          mkdir -p ~/.config/glab-cli
          cat <<EOF > ~/.config/glab-cli/config.yml
          hosts:
            gitlab.com:
              token: $GITLAB_TOKEN
          EOF
      - name: 📅 Clone GitLab repo for CI template linting
        run: |

          git clone https://oauth2:${GITLAB_TOKEN}@gitlab.com/${GITLAB_REPO}.git gitlab-ci-lint
          cd gitlab-ci-lint

          git config user.name "BitBlocks Lint Bot"
          git config user.email "ci-lint@bitblocks.dev"

      - name: 🔍 Lint GitLab CI templates
        run: |
          cd gitlab-ci-lint
          for file in ../bit-blocks-starter/cicd-pipelines/gitlab/*.yml; do
            filename=$(basename "$file")
            branch="lint-${filename%%.*}-$(date +%s)"
            echo "→ Testing $filename on branch $branch"

            # Create test branch and overwrite CI
            git checkout -b "$branch"
            cp "$file" .gitlab-ci.yml
            git add .gitlab-ci.yml
            git commit -m "Lint: $filename"
            git push origin "$branch"

            # Authenticate and lint
            echo "$GITLAB_TOKEN" | glab auth login --stdin
            if glab ci lint; then
              echo "✅ $filename passed"
            else
              echo "❌ $filename failed"
            fi
          done

      - name: 🗑️ Clean up
        run: |
          echo "Cleaning up..."
          # Clean up test branch
          git push origin --delete "$branch" || true
          git checkout main || git checkout master